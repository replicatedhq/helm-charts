apps:
  wg-easy:
    enabled: true
    type: deployment
    replicas: 1
    containers:
      wg-container:
        image:
          repository: weejewel/wg-easy
          tag: 7.0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
              - NET_ADMIN
            drop: []
        ports:
          - containerPort: 51821
            protocol: TCP
          - containerPort: 51820
            protocol: UDP
        volumeMounts:
          - mountPath: /etc/wireguard
            name: config
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
    volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
services:
  web:
    enabled: true
    appName:
      - wg-easy
    type: ClusterIP
    ipFamilyPolicy: SingleStack
    ports:
      http:
        enabled: true
        port: 51821
        protocol: HTTP
        appProtocol: http
        targetPort: 51821
  vpn:
    enabled: true
    appName:
      - wg-easy
    type: LoadBalancer
    ports:
      udp:
        enabled: true
        port: 51820
        protocol: UDP
        appProtocol: udp
        targetPort: 51820
persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    persistentVolumeClaim:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi

# Wireguard configuration
wireguard:
  # If password is defined will set a password on the web interface
  #password: supersecure
  # See https://github.com/WeeJeWel/wg-easy for configuration options
  host: vpn.example.com
  #port:
  #mtu:
  #persistentKeepalive:
  #defaultAddress:
  #defaultDns:
  #allowedIps:
  #preUp:
  #postUp:
  #preDown:
  #postDown:

# Troubleshoot
troubleshoot:
  support-bundles:
    # Replicated supplied default support bundle spec
    replicated:
      # -- Enables or disables the Replicated default support bundle
      enabled: true
    wg-easy:
      enabled: true
      analyzers:
        - clusterPodStatuses:
          name: unhealthy
          outcomes:
            - fail:
                when: "== CrashLoopBackOff"
                message: Pod {{ .Namespace }}/{{ .Name }} is in a CrashLoopBackOff state.
            - fail:
                when: "== ImagePullBackOff"
                message: Pod {{ .Namespace }}/{{ .Name }} is in a ImagePullBackOff state.
            - fail:
                when: "== Pending"
                message: Pod {{ .Namespace }}/{{ .Name }} is in a Pending state.
            - fail:
                when: "== Evicted"
                message: Pod {{ .Namespace }}/{{ .Name }} is in a Evicted state.
            - fail:
                when: "== Terminating"
                message: Pod {{ .Namespace }}/{{ .Name }} is in a Terminating state.
            - fail:
                when: "== Init:Error"
                message: Pod {{ .Namespace }}/{{ .Name }} is in an Init:Error state.
            - fail:
                when: "== Init:CrashLoopBackOff"
                message: Pod {{ .Namespace }}/{{ .Name }} is in an Init:CrashLoopBackOff state.
            - fail:
                when: "!= Healthy" # Catch all unhealthy pods. A pod is considered healthy if it has a status of Completed, or Running and all of its containers are ready.
                message: Pod {{ .Namespace }}/{{ .Name }} is unhealthy with a status of {{ .Status.Reason }}.
  preflights:
    wg-preflights:  # arbitrary name for your custom spec
      enabled: true
      collectors:
        - clusterInfo: {}
        - clusterResources:
            ignoreRBAC: true
      analyzers:
        - clusterVersion:
            outcomes:
              - fail:
                  when: "< 1.16.0"
                  message: The application requires at least Kubernetes 1.16.0, and recommends 1.18.0.
                  uri: https://kubernetes.io
              - warn:
                  when: "< 1.18.0"
                  message: Your cluster meets the minimum version of Kubernetes, but we recommend you update to 1.18.0 or later.
                  uri: https://kubernetes.io
              - pass:
                  message: Your cluster meets the recommended and required versions of Kubernetes.
